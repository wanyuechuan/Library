<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.library.Mapper.CategoryMapper">

    <resultMap id="categoryMap" type="com.example.library.entity.Category">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="remark" property="remark"/>
        <result column="pid" property="pid"/>
        <result column="createtime" property="createtime"/>
        <result column="updatetime" property="updatetime"/>
        <collection property="children" ofType="com.example.library.entity.Category" column="id" select="selectByPid"/>
    </resultMap>

    <select id="selectByPid" resultType="com.example.library.entity.Category">
        select *
        from category
        where pid = #{id}
        order by id desc
    </select>


    <select id="listByCondition" resultMap="categoryMap">
        select c1.* from category c1
        left join category c2
        on c1.id = c2.pid
        <where>
            isnull(c1.pid)
            <if test="name != null and name!= ''">
                and (c1.name like concat('%',#{name},'%') or c2.name like concat('%',#{name},'%'))
            </if>
        </where>
        group by c1.id
        order by c1.id desc
    </select>
    <select id="getCategoryById" resultType="com.example.library.entity.Category">
        select *
        from category
        where id = #{id};
    </select>
    <select id="selectCategory" resultType="com.example.library.entity.Category">
        select *
        from category
        where name = #{name};
    </select>
    <select id="list" resultType="com.example.library.entity.Category">
        select * from category;
    </select>


    <insert id="add">
        insert into category
            (name, remark, pid, createtime, updatetime)
        values (#{name}, #{remark}, #{pid}, #{createtime}, #{updatetime})
    </insert>


    <update id="UpdateData">
        update category
        set name=#{name},
            remark=#{remark},
            createtime=#{createtime},
            updatetime=#{updatetime}
        where id = #{id}
    </update>


    <delete id="deleteById">
        delete
        from category
        where id = #{id}
    </delete>
</mapper>
